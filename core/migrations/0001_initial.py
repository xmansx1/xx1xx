# Generated by Django 5.2.7 on 2025-10-30 14:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=120)),
                ("city", models.CharField(max_length=30)),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="org_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Volunteer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=30)),
                ("skills", models.JSONField(blank=True, default=list)),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vol_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "phone",
                    models.CharField(
                        help_text="مثال: 05xxxxxxxx",
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="رقم الجوال غير صالح. يجب أن يبدأ بـ 05 وطول 10–12 رقمًا.",
                                regex="^05\\d{8,10}$",
                            )
                        ],
                    ),
                ),
                ("city", models.CharField(max_length=30)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("electric", "تركيب/كهرباء"),
                            ("move", "نقل خفيف"),
                            ("health", "زيارة/توصيل صحي"),
                            ("senior", "مساعدة كبار السن"),
                            ("other", "أخرى"),
                        ],
                        max_length=20,
                    ),
                ),
                ("desc", models.TextField()),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "بانتظار"),
                            ("accepted", "مقبول"),
                            ("inprogress", "قيد التنفيذ"),
                            ("done", "منجز"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lng", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assigned_org",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_org_requests",
                        to="core.organization",
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_requests",
                        to="core.volunteer",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status"], name="core_servic_status_4f4aee_idx"
                    ),
                    models.Index(fields=["city"], name="core_servic_city_4a2a82_idx"),
                    models.Index(fields=["date"], name="core_servic_date_962127_idx"),
                    models.Index(
                        fields=["created_at"], name="core_servic_created_df9c04_idx"
                    ),
                ],
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            ("assigned_to__isnull", False),
                            ("assigned_org__isnull", False),
                            _negated=True,
                        ),
                        name="service_request_single_assignment",
                    )
                ],
            },
        ),
    ]
